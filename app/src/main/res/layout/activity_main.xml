<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.example.layout.image.MainActivity">

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="200dp"
        android:layout_height="202dp"
        app:srcCompat="@mipmap/ic_launcher"
        tools:layout_constraintTop_creator="1"
        tools:layout_constraintRight_creator="1"
        app:layout_constraintRight_toRightOf="parent"
        android:layout_marginTop="52dp"
        tools:layout_constraintLeft_creator="1"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:onClick="Click"
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Click me!!!"
        tools:layout_constraintTop_creator="1"
        tools:layout_constraintRight_creator="1"
        app:layout_constraintRight_toRightOf="parent"
        android:layout_marginTop="57dp"
        app:layout_constraintTop_toBottomOf="@+id/imageView"
        tools:layout_constraintLeft_creator="1"
        app:layout_constraintLeft_toLeftOf="parent" />
</android.support.constraint.ConstraintLayout>
    <!-- LinearLayout is a view group that aligns all children in either vertically or horizontally.
        The TextView is an Android control used to build the GUI and it have various attributes
        ID-Any View object may have an integer ID associated with it, to uniquely identify the View within the tree.
        When the application is compiled, this ID is referenced as an integer, but the ID is typically assigned in the layout XML file
        as a string, in the id attribute.This is an XML attribute common to all View objects (defined by the View class) and you will use
        it very often
        wrap_content tells your view to size itself to the dimensions required by its content.
        match_parent tells your view to become as big as its parent view group will allow.
        gravity means the postion of textview
        background means color of the screen
        textColor means color of the text
        textSize means size of the text
        -->